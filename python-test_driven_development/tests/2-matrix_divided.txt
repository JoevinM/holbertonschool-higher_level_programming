    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0], [1.5, 2.0]]

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, "2")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix = "not a matrix"
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2], [3, 4, 5]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = [[1, 2], [3, float('inf')]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0], [1.5, inf]]

    >>> matrix = [[1, 2], [3, float('nan')]]
    >>> matrix_divided(matrix, float('nan'))
    [[nan, nan], [nan, nan]]
